package colectionDemo.genericInColectionDemo;

import java.util.ArrayList;
import java.util.List;

/* В список можно добавить обьекты только того типа что указаны в параметризации List<Student> list.
Если попытаться добавить другой тип то будет ошибка.
 */
public class GenericDemo {
    public static void main(String[] args) {
        //List<Student> list = new ArrayList<>(); если список параметризован наследником то, добавить
        //обьект из супер класса не получится будет ошибка!!!
        List<Person3> list = new ArrayList<>();//если параметризация будет родительским классом, то
        //добавить обьект наследника не составит труда.
        list.add(new Student());
        list.add(new Student());
        //list.add("ддд");- здесь будет ошибка!
        /*Так же у нас есть супер класс Person если попытаться добавить его будет так же ошибка!!!
       list.add(new Person3()); Для того чтобы можно было добавлять супер класс нам нужно изменить
       параметризацию List<Person3> list- тогда ошибки не будет.*/
        list.add(new Person3());

        /*
        При извлечении этого обьекта метод get() возвращает ссылку на родительский класс, причем не важно
        будет в списке родитель или наследник. Т.е. всегда будет возвращаться тип параметризации.
        Если нужно добраться до наследника, то придется возвращенный тип преобразовывать к наследнику

         */
        Person3 person3 = list.get(2);

    }
}
